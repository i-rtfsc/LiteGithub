ext {

    /*android版本配置相关*/
    androidSdk = [
            toolVersion   : "27.1.0",
            compileVersion: 29,
            minVersion    : 28,
            targetVersion : 29,
    ]


    /*app版本控制相关*/
    timeList = buildTime()

    year = timeList[0] - 2018
    month = timeList[1]
    birthday = timeList[0] + "/" + timeList[1] + "/1"
    commitCount = getCommitCount(birthday)

    verCode = genVerCode(timeList[0], month, commitCount)
    verName = genVerName(year, month, commitCount)
    verbranch = getLocalBranchName()
    /*app版本控制相关*/

    /*sdk version*/
    axes = ['': '']
    for (Project subPorject : project.subprojects) {
        def key = subPorject.getName().toString()
        def subPath = getRootDir().path + File.separator + subPorject.getName()
        def value = getCommitCount(birthday, subPath).toString()
        axes.put(key, value)
    }

    /*3方库版本*/
    thirdParty = [
            kotlin_version               : "1.4.10",
            appcompat                    : "1.2.0",
            material                     : "1.1.0",
            constraintlayout             : "2.0.4",
            lifecycle                    : "2.2.0",
            lifecycle_extensions         : "2.2.0",
            lifecycle_compiler           : "2.2.0",
            swiperefreshlayout           : "1.0.0",
            legacy                       : "1.0.0",
            cardview                     : "1.0.0",
            recyclerview                 : "1.0.0",
            annotation                   : "1.0.0",
            room                         : "2.2.5",
            room_compiler                : "2.0.0",
            calligraphy                  : "2.2.0",
            butterknife                  : "10.2.3",
            gson                         : "2.8.5",
            retrofit2                    : "2.5.0",
            retrofit2_converter_scalars  : "2.5.0",
            retrofit2_converter_moshi    : "2.5.0",
            retrofit2_logging_interceptor: "3.12.0",
            tinypinyin                   : "1.0.0",
            stetho                       : "1.5.0",
            leakcanary                   : "1.5.4",
            bugly_crashreport_upgrade    : "1.3.4",
            room_runtime                 : "1.0.0",
            rxjava                       : "1.1.0",
            rxandroid                    : "1.1.0",
            toasty                       : "1.3.0",
            codeview                     : "1.3.1",
            materialprogressbar          : "1.4.2",
            slidingrootnav               : "1.1.0",
            constraint_layout            : "1.0.2",
            submitbutton                 : "1.1.2",
            constraint                   : "1.0.2",
            design                       : "25.1.1",
            circleimageview              : "2.2.0",
            picasso                      : "2.5.2",
            glide                        : "4.9.0",
            gradient                     : "1.0.1",
            literouter_core              : "2.1.0",
            literouter_compiler          : "2.1.0",
            litetask                     : "1.0.5",
    ]
}

/**
 * 组织版本号（VersionCode）
 * @param year 大版本
 * @param month 小版本
 * @param commitCount 小版本版本启动日
 * @return eg:2021072513
 */
def static genVerCode(int year, int month, int commitCount) {
    return year * 100 * 100 + month * 100 + commitCount
}

/**
 * 组织版本名（VersionName）
 * @param year 大版本
 * @param month 小版本
 * @param commitCount 小版本版本启动日
 * @return eg:v1.2.48.190210.dev.aabbcc
 */
def static genVerName(int year, int month, int commitCount) {
    def today = new Date().format("yyMMdd")
    def branchName = getLocalBranchName()
    def shortId = getShortCommitId()
    return "v$year.$month.$commitCount.$today.$branchName.$shortId"
}

/**
 * 获取累计提交数
 *
 * @param 小版本号更新日期
 * @return 累计提交数
 */
def static getCommitCount(String date, String path = "./") {
    def mainCountCmd = ["git", "log", "--pretty=format:%h", "--after='$date 0:0:0 +0800'", path]

    if (org.gradle.internal.os.OperatingSystem.current().isWindows()) {
        return mainCountCmd.execute().pipeTo("find /v \"\" /c".execute()).text.toInteger()
    } else if (org.gradle.internal.os.OperatingSystem.current().isLinux()) {
        return mainCountCmd.execute().pipeTo("wc -l".execute()).text.toInteger() + 1
    } else if (org.gradle.internal.os.OperatingSystem.current().isMacOsX()) {
        return mainCountCmd.execute().pipeTo("wc -l".execute()).text.toInteger() + 1
    }
    //可通过以下指令查看具体提交的位置
    /*git log -47 --pretty=oneline --after="Mon Mar 25 10:31:38 2019 +0800"*/
}

/**
 * 获取简短commit号
 * @return
 */
def static getShortCommitId() {
    return 'git rev-parse --short HEAD'.execute().text.trim()
}


def static getLocalBranchName() {
    def result = "git symbolic-ref --short -q HEAD".execute().text.trim()
    result += ""
    return result
}

def static buildTime() {
    def year = new Date().format("yyyy", TimeZone.getTimeZone("GMT+08:00")).toString().toInteger()
    def month = new Date().format("MM", TimeZone.getTimeZone("GMT+08:00")).toString().toInteger()
    def day = new Date().format("dd", TimeZone.getTimeZone("GMT+08:00")).toString().toInteger()
    return [year, month, day]
}
